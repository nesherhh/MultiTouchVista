<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.ComponentModel.Composition</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Internal.GenerationServices.LoadValue(System.Reflection.Emit.ILGenerator,System.Object)">
            Generates the code that loads the supplied value on the stack
            This is not as simple as it seems, as different instructions need to be generated depending
            on its type.
            We support:
            1. All primitive types
            2. Strings
            3. Enums
            4. typeofs
            5. nulls
            6. Dictionaries of (string, object) recursively containing all of the above
            7. Enumerables
            8. Delegates on static functions or any of the above
            Everything else cannot be represented as literals
            <param name="ilGenerator"></param>
            <param name="item"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Internal.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Adapter_CannotAdaptFromAndToSameContract">
            <summary>
              Looks up a localized string similar to The adapter &apos;{0}&apos; indicates that it adapts to and from the same contract; &apos;{1}&apos;. Adapter must adapt to and from different contracts..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Adapter_CannotAdaptNullOrEmptyFromOrToContract">
            <summary>
              Looks up a localized string similar to The adapter &apos;{0}&apos; provided an null, empty or malformed &apos;to&apos; and/or &apos;from&apos; contract. Adapters must specify both &apos;to&apos; and &apos;from&apos; contracts using a string or a type..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Adapter_ContractMismatch">
            <summary>
              Looks up a localized string similar to The adapter &apos;{0}&apos; indicates that it adapts to contract &apos;{1}&apos;, however, it returned an export with contract &apos;{2}&apos;. Adapters must return exports that have the same contract that the adapter indicates it adapts to..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Adapter_ExceptionDuringAdapt">
            <summary>
              Looks up a localized string similar to The adapter &apos;{0}&apos; threw an exception while to adapt from contract &apos;{1}&apos; to contract &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Adapter_TypeMismatch">
            <summary>
              Looks up a localized string similar to The available adapter &apos;{0}&apos; is of type &apos;{1}&apos;. Adapters must be of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Adapter_TypeNull">
            <summary>
              Looks up a localized string similar to The available adapter &apos;{0}&apos; is a null reference (Nothing in Visual Basic). Adapter must be of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Argument_AssemblyReflectionOnly">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is a reflection-only assembly which is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Argument_ElementReflectionOnlyType">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; contains a reflection-only type which is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Argument_ExportsEmpty">
            <summary>
              Looks up a localized string similar to &apos;exports&apos; cannot be empty when ImportDefinition.ImportCardinality is ImportCardinality.ExactlyOne..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Argument_ExportsTooMany">
            <summary>
              Looks up a localized string similar to &apos;exports&apos; cannot contain more than one element when ImportDefinition.ImportCardinality is ImportCardinality.ZeroOrOne or ImportCardinality.ExactlyOne..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.Argument_NullElement">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot contain a null (Nothing in Visual Basic) element..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ArgumentException_EmptyString">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot be an empty string (&quot;&quot;)..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ArgumentOutOfRange_InvalidEnum">
            <summary>
              Looks up a localized string similar to The value of argument &apos;{0}&apos; ({1}) is invalid for Enum type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ArgumentValueType">
            <summary>
              Looks up a localized string similar to The argument was a value type which is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.AssemblyFileNotFoundOrWrongType">
            <summary>
              Looks up a localized string similar to Assembly file {0} is either not found or not a dll or exe file..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.AssemblyInformationCannotBeCached">
            <summary>
              Looks up a localized string similar to Information about the assembly &apos;{0}&apos; because it has been loaded from the network or the byte stream. Only assemblies loaded from files on disk are supported..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CacheableCatalogMustHaveProperConstructor">
            <summary>
              Looks up a localized string similar to The catalog &apos;{0}&apos; cannot be cached because it doesn&apos;t have a public constructor that accepts &apos;{1}&apos;  as an argument..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CachingFieldNotFound">
            <summary>
              Looks up a localized string similar to Invalid cache : field &apos;{1}&apos; on type &apos;{0}&apos; is not found..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CachingMethodNotFound">
            <summary>
              Looks up a localized string similar to Invalid cache : method &apos;{1}&apos; on type &apos;{0}&apos; is not found..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CachingTypeNotFound">
            <summary>
              Looks up a localized string similar to Invalid cache : type &apos;{0}&apos; is not found..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CannotCreateMetadataView">
            <summary>
              Looks up a localized string similar to Cannot create a MetadataView of metadataViewType &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CardinalityMismatch_NoExports">
            <summary>
              Looks up a localized string similar to No exports were found that match the constraint &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CardinalityMismatch_TooManyExports">
            <summary>
              Looks up a localized string similar to More than one exports were found that match the constraint &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CatalogDoesNotSupportCaching">
            <summary>
              Looks up a localized string similar to The catalog  doesn&apos;t support caching..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CatalogIsNotCacheable">
            <summary>
              Looks up a localized string similar to The catalog cannot be cached as at least one of the contained catalogs does not support caching : &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CompositionElement_UnknownOrigin">
            <summary>
              Looks up a localized string similar to Unknown Origin.
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CompositionEngine_ComposeTookTooManyIterations">
            <summary>
              Looks up a localized string similar to The composition failed because it did not complete within &apos;{0:N0}&apos; iterations. This is most likely caused by a cycle in the dependency graph of a part which is marked with a non-shared creation policy..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CompositionEngine_PartCannotActivate">
            <summary>
              Looks up a localized string similar to Cannot activate part &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CompositionEngine_PartCannotGetExportedObject">
            <summary>
              Looks up a localized string similar to Cannot get export &apos;{0}&apos; from part &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CompositionEngine_PartCannotSetImport">
            <summary>
              Looks up a localized string similar to Cannot set import &apos;{0}&apos; on part &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CompositionEngine_PartCycle">
            <summary>
              Looks up a localized string similar to Cannot compose part &apos;{0}&apos; because a cycle exists in the dependencies between the exports being composed. To break this cycle, consider changing some imports from constructor to property injection..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CompositionException_ErrorPrefix">
            <summary>
              Looks up a localized string similar to Resulting in:.
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CompositionException_MultipleErrorsWithMultiplePaths">
            <summary>
              Looks up a localized string similar to The composition produced multiple composition errors, with {0:N0} root causes. The root causes are provided below..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CompositionException_ReviewErrorProperty">
            <summary>
              Looks up a localized string similar to Review the CompositionException.Errors property for more detailed information..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CompositionException_SingleErrorWithMultiplePaths">
            <summary>
              Looks up a localized string similar to The composition produced a single composition error, with {0:N0} root causes. The root causes are provided below..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.CompositionException_SingleErrorWithSinglePath">
            <summary>
              Looks up a localized string similar to The composition produced a single composition error. The root cause is provided below..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ContractMismatch_ExportedObjectCannotBeCastToT">
            <summary>
              Looks up a localized string similar to Cannot cast the underlying exported object of type &apos;{0}&apos; to type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.DirectoryNotFound">
            <summary>
              Looks up a localized string similar to Directory &apos;{0}&apos; could not be found..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ExportDefinitionNotOnThisComposablePart">
            <summary>
              Looks up a localized string similar to {0} did not originate from the ExportDefinitions property on this ComposablePart or its ComposablePartDefinition..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ImportDefinitionNotOnThisComposablePart">
            <summary>
              Looks up a localized string similar to {0} did not originate from the ImportDefinitions property on this ComposablePart or its ComposablePartDefinition..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ImportNotSetOnPart">
            <summary>
              Looks up a localized string similar to Could not finishing composing object of type &apos;{0}&apos;. The import &apos;{1}&apos; was not satisfied..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.InternalExceptionMessage">
            <summary>
              Looks up a localized string similar to Internal error occurred. Additional information: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.InvalidCacheToken">
            <summary>
              Looks up a localized string similar to Invalid cache token : &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.InvalidMetadataView">
            <summary>
              Looks up a localized string similar to The Type &apos;{0}&apos; supplied is not a valid Metadata View..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.InvalidOperation_DefinitionCannotBeRecomposed">
            <summary>
              Looks up a localized string similar to &apos;definition&apos; cannot be set after OnComposed has been called because ImportDefinition.IsRecomposable is false..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.InvalidOperation_GetExportedObjectBeforePrereqImportSet">
            <summary>
              Looks up a localized string similar to GetExportedObject cannot be called before prerequisite import &apos;{0}&apos; has been set..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.InvalidOperationReentrantCompose">
            <summary>
              Looks up a localized string similar to A call to Compose occurred during a call to Compose on the same CompositionContainer object. Use the IsComposing property on CompositionContainer to ensure a composition is not already in progress before calling Compose..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.MetadataItemNotSupported">
            <summary>
              Looks up a localized string similar to This export does not support the metadata item &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.MustProvideExportNameWhenExportingMethods">
            <summary>
              Looks up a localized string similar to Must provide export name specifically when exporting methods..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.NotImplemented_NotOverriddenByDerived">
            <summary>
              Looks up a localized string similar to The {0} member must be overridden by a derived class..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.NotSupportedReadOnlyDictionary">
            <summary>
              Looks up a localized string similar to The underlying dictionary is read-only..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ObjectAlreadyInitialized">
            <summary>
              Looks up a localized string similar to This property cannot be set after the object&apos;s public surface has been accessed..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ObjectMustBeInitialized">
            <summary>
              Looks up a localized string similar to This object has not been initialized - the property &apos;{0}&apos; must be set..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ReflectionModel_ExportMethodTooManyParameters">
            <summary>
              Looks up a localized string similar to Cannot create a delegate wrapper for method &apos;{0}&apos; because it has {1:N0} parameters. To be represented as one of the &apos;System.Action&apos; or &apos;System.Func&apos; delegate types, a method must have less than 5 parameters..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ReflectionModel_ExportNotReadable">
            <summary>
              Looks up a localized string similar to Cannot get the value of property &apos;{0}&apos;, because the member is not readable. The property must have an accessible getter..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ReflectionModel_ExportThrewException">
            <summary>
              Looks up a localized string similar to An exception occurred while trying to get the value of property &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ReflectionModel_ImportCollectionNotWritable">
            <summary>
              Looks up a localized string similar to Cannot populate the value of enumerable field or property, &apos;{0}&apos; because the member&apos;s type does not have accessible &apos;Add&apos; and/or &apos;Clear&apos; methods. The member must be either a collection type, or writable and assignable from type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ReflectionModel_ImportCollectionNull">
            <summary>
              Looks up a localized string similar to Cannot populate the value of enumerable field or property &apos;{0}&apos; because the member returned null (Nothing in Visual Basic). The member must either be pre-initialized by the type, or writable and assignable from type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ReflectionModel_ImportNotAssignableFromExport">
            <summary>
              Looks up a localized string similar to The export &apos;{0}&apos; is not assignable to type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ReflectionModel_ImportNotWritable">
            <summary>
              Looks up a localized string similar to Cannot set the value of field or property &apos;{0}&apos; because the member is not writable. If the member is a property, it must have an accessible setter; otherwise, if it is a field, it must not be read-only..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ReflectionModel_ImportThrewException">
            <summary>
              Looks up a localized string similar to An exception occurred while trying to set the value of property &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ReflectionModel_PartConstructorMissing">
            <summary>
              Looks up a localized string similar to Cannot create an instance of type &apos;{0}&apos; because a constructor could not be selected for construction. Ensure that the type either has a default constructor, or a single constructor marked with the &apos;System.ComponentModel.Composition.ImportingConstructorAttribute&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ReflectionModel_PartConstructorThrewException">
            <summary>
              Looks up a localized string similar to An exception occurred while trying to create an instance of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.ReflectionModel_PartImportCompletedThrewException">
            <summary>
              Looks up a localized string similar to An exception occurred while calling the &apos;ImportCompleted&apos; method on type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.SetMethodsNotSupported">
            <summary>
              Looks up a localized string similar to Set Methods not supported &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.TypeCatalog_Empty">
            <summary>
              Looks up a localized string similar to &lt;Empty&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Internal.Strings.UnsupportedCachedValue">
            <summary>
              Looks up a localized string similar to Objects of type &apos;{0}&apos; cannot be written into the cache..
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.ComposablePart">
            <summary>
                Defines the <see langword="abstract"/> base class for composable parts, which 
                import and produce exported objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePart.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePart.Dispose">
            <summary>
                Releases all resources used by the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePart.OnComposed">
            <summary>
                Called by the composition engine when all required imports on the part have been
                satisfied.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException">
                An error occurred activating the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePart.GetExportedObject(System.ComponentModel.Composition.Primitives.ExportDefinition)">
            <summary>
                Gets the exported object described by the specified definition.
            </summary>
            <param name="definition">
                One of the <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects from the 
                <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePart.ExportDefinitions"/> property describing the exported object
                to return.
            </param>
            <returns>
                The exported <see cref="T:System.Object"/> described by <paramref name="definition"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="definition"/> did not originate from the <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePart.ExportDefinitions"/>
                property on the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                One or more pre-requisite imports, indicated by <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite"/>,
                have not been set.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException">
                An error occurred getting the exported object described by the <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePart.SetImport(System.ComponentModel.Composition.Primitives.ImportDefinition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
            <summary>
                Sets the import described by the specified definition with the specified exports.
            </summary>
            <param name="definition">
                One of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> objects from the 
                <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePart.ImportDefinitions"/> property describing the import to be set.
            </param>
            <param name="exports">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects of which 
                to set the import described by <paramref name="definition"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exports"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="definition"/> did not originate from the <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePart.ImportDefinitions"/>
                property on the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>.
                <para>
                    -or-
                </para>
                <paramref name="exports"/> contains an element that is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exports"/> is empty and <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality"/> is 
                <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne"/>.
                <para>
                    -or-
                </para>
                <paramref name="exports"/> contains more than one element and 
                <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality"/> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne"/> or 
                <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                <see cref="M:System.ComponentModel.Composition.Primitives.ComposablePart.OnComposed"/> has been previously called and 
                <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable"/> is <see langword="false"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException">
                An error occurred setting the import described by the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePart.Dispose(System.Boolean)">
            <summary>
                Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> and 
                optionally releases the managed resources.
            </summary>
            <param name="disposing">
                <see langword="true"/> to release both managed and unmanaged resources; 
                <see langword="false"/> to release only unmanaged resources.
            </param>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ComposablePart.ExportDefinitions">
            <summary>
                Gets the export definitions that describe the exported objects provided by the part.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects describing
                the exported objects provided by the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        If the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> was created from a 
                        <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/>, this property should return the result of 
                        <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.ExportDefinitions"/>.
                    </note>
                 </para>
                 <para>
                    <note type="inheritinfo">
                        Overriders of this property should never return <see langword="null"/>.
                        If the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> does not have exports, return an empty 
                        <see cref="T:System.Collections.Generic.IEnumerable`1"/> instead.
                    </note>
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ComposablePart.ImportDefinitions">
            <summary>
                Gets the import definitions that describe the imports required by the part.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> objects describing
                the imports required by the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        If the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> was created from a 
                        <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/>, this property should return the result of 
                        <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.ImportDefinitions"/>.
                    </note>
                 </para>
                 <para>
                    <note type="inheritinfo">
                        Overrides of this property should never return <see langword="null"/>.
                        If the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> does not have imports, return an empty 
                        <see cref="T:System.Collections.Generic.IEnumerable`1"/> instead.
                    </note>
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ComposablePart.Metadata">
            <summary>
                Gets the metadata of the part.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>. The default is an empty, read-only
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        If the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> was created from a 
                        <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/>, this property should return the result of 
                        <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.Metadata"/>.
                    </note>
                 </para>
                 <para>
                    <note type="inheritinfo">
                        Overriders of this property should return a read-only
                        <see cref="T:System.Collections.Generic.IDictionary`2"/> object with a case-sensitive, 
                        non-linguistic comparer, such as <see cref="P:System.StringComparer.Ordinal"/>, 
                        and should never return <see langword="null"/>. If the 
                        <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> does not contain metadata, return an 
                        empty <see cref="T:System.Collections.Generic.IDictionary`2"/> instead.
                    </note>
                 </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ComposablePart.RequiresDisposal">
            <summary>
                Determines if this <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> requires its dispose method called. This
                is to help prevent memory bloat by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> because it
                doesn't need to hold strong references to <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> that aren't disposable.
            
                The value of this property should be constant throughout the lifetime of the part because some
                code such as the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> will use it to determine if it should
                hold a reference to this part for disposal.
            </summary>
            <returns>
                <see langword="true"/> if this part should have its dispose called;
                otherwise <see langword="false"/> which is the default.
            </returns>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.ICompositionElement">
            <summary>
                Represents an element that participates in composition.
            </summary>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
            <summary>
                Gets the display name of the composition element.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing a human-readable display name of the <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement"/>.
            </value>
            <remarks>
                <note type="implementnotes">
                    Implementors of this property should never return <see langword="null"/> or an empty 
                    string ("").
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
            <summary>
                Gets the composition element from which the current composition element
                originated.
            </summary>
            <value>
                A <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement"/> from which the current 
                <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement"/> originated, or <see langword="null"/> 
                if the <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement"/> is the root composition element.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition">
            <summary>
                Defines the <see langword="abstract"/> base class for composable part definitions, which 
                describe, and allow the creation of, <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.CreatePart">
            <summary>
                Creates a new instance of a part that the definition describes.
            </summary>
            <returns>
                The created <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>.
            </returns>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        Derived types overriding this method should return a new instance of a 
                        <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> on every invoke and should never return 
                        <see langword="null"/>.
                    </note>
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.ExportDefinitions">
            <summary>
                Gets the export definitions that describe the exported objects provided by parts 
                created by the definition.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects describing
                the exported objects provided by <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> objects created by the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/>.
            </value>
            <remarks>
                <note type="inheritinfo">
                    Overrides of this property should never return <see langword="null"/>.
                    If the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> objects created by the 
                    <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> do not provide exported objects, return 
                    an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> instead.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.ImportDefinitions">
            <summary>
                Gets the import definitions that describe the imports required by parts created 
                by the definition.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> objects describing
                the imports required by <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> objects created by the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/>.
            </value>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>.
                    If the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> objects created by the 
                    <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> do not have imports, return an empty 
                    <see cref="T:System.Collections.Generic.IEnumerable`1"/> instead.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.Metadata">
            <summary>
                Gets the metadata of the definition.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/>. The default is an empty, read-only
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </value>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        Overriders of this property should return a read-only
                        <see cref="T:System.Collections.Generic.IDictionary`2"/> object with a case-sensitive, 
                        non-linguistic comparer, such as <see cref="P:System.StringComparer.Ordinal"/>, 
                        and should never return <see langword="null"/>. If the 
                        <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> does contain metadata, 
                        return an empty <see cref="T:System.Collections.Generic.IDictionary`2"/> instead.
                    </note>
                </para>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.ExportDefinition">
            <summary>
                Describes the contract that an <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> object satisfies.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ExportDefinition.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override <see cref="P:System.ComponentModel.Composition.Primitives.ExportDefinition.ContractName"/>
                    and optionally, <see cref="P:System.ComponentModel.Composition.Primitives.ExportDefinition.Metadata"/>. By default, <see cref="P:System.ComponentModel.Composition.Primitives.ExportDefinition.Metadata"/>
                    returns an empty, read-only dictionary.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ExportDefinition.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> class with 
                the specified contract name and metadata.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/>.
            </param>
            <param name="metadata">
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.Primitives.ExportDefinition.Metadata"/> property to an empty, read-only 
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ExportDefinition.ToString">
            <summary>
                Returns a string representation of the export definition.
            </summary>
            <returns>
                A <see cref="T:System.String"/> containing the value of the <see cref="P:System.ComponentModel.Composition.Primitives.ExportDefinition.ContractName"/> property.
            </returns>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ExportDefinition.ContractName">
            <summary>
                Gets the contract name of the export definition.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/>.
            </value>
            <exception cref="T:System.NotImplementedException">
                The property was not overridden by a derived class.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/> 
                    or an empty string ("").
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ExportDefinition.Metadata">
            <summary>
                Gets the metadata of the export definition.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/>. The default is an empty, read-only
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </value>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        Overriders of this property should return a read-only
                        <see cref="T:System.Collections.Generic.IDictionary`2"/> object with a case-sensitive, 
                        non-linguistic comparer, such as <see cref="P:System.StringComparer.Ordinal"/>, 
                        and should never return <see langword="null"/>.
                        If the <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> does not contain metadata 
                        return an empty <see cref="T:System.Collections.Generic.IDictionary`2"/> instead.
                    </note>
                </para>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition">
            <summary>
                Represents a contract name and metadata-based import 
                required by a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> object.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.ImportDefinition">
            <summary>
                Represents an import required by a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> object.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override the <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint"/> 
                    property, and optionally, the <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality"/>, <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite"/> 
                    and <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable"/> 
                    properties.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> class 
                with the specified constraint, cardinality, value indicating if the import 
                definition is recomposable and a value indicating if the import definition 
                is a prerequisite.
            </summary>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions that must be matched for the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> 
                to be satisfied by an <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </param>
            <param name="cardinality">
                One of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality"/> values indicating the 
                cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects required by the
                <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>.
            </param>
            <param name="isRecomposable">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> can be satisfied 
                multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>, otherwise, 
                <see langword="false"/>.
            </param>
            <param name="isPrerequisite">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> is required to be 
                satisfied before a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> can start producing exported 
                objects; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="constraint"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="cardinality"/> is not one of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality"/> 
                values.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ImportDefinition.ToString">
            <summary>
                Returns a string representation of the import definition.
            </summary>
            <returns>
                A <see cref="T:System.String"/> containing the value of the <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint"/> property.
            </returns>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality">
            <summary>
                Gets the cardinality of the exports required by the import definition.
            </summary>
            <value>
                One of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality"/> values indicating the 
                cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects required by the
                <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>. The default is 
                <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne"/>
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint">
            <summary>
                Gets an expression that defines conditions that must be matched for the import 
                described by the import definition to be satisfied.
            </summary>
            <returns>
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions that must be matched for the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> to be satisfied by an <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
                The property was not overridden by a derived class.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite">
            <summary>
                Gets a value indicating whether the import definition is required to be 
                satisfied before a part can start producing exported objects.
            </summary>
            <value>
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> is required to be 
                satisfied before a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> can start producing exported 
                objects; otherwise, <see langword="false"/>. The default is <see langword="true"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable">
            <summary>
                Gets a value indicating whether the import definition can be satisfied multiple times.
            </summary>
            <value>
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> can be satisfied 
                multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>, otherwise, 
                <see langword="false"/>. The default is <see langword="false"/>.
            </value>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override the <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractName"/> 
                    property, and optionally, the <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata"/>, 
                    <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality"/>, <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite"/>,
                    <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable"/> and <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy"/> properties.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/> class 
                with the specified contract name, cardinality, value indicating if the import 
                definition is recomposable and a value indicating if the import definition 
                is a prerequisite.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> required by the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/>.
            </param>
            <param name="cardinality">
                One of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality"/> values indicating the 
                cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects required by the
                <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/>.
            </param>
            <param name="isRecomposable">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/> can be satisfied 
                multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>, otherwise, 
                <see langword="false"/>.
            </param>
            <param name="isPrerequisite">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/> is required to be 
                satisfied before a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> can start producing exported 
                objects; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
                <para>
                    -or-
                </para>
                <paramref name="cardinality"/> is not one of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality"/> 
                values.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/> class 
                with the specified contract name, required metadataq, cardinality, value indicating 
                if the import definition is recomposable and a value indicating if the import definition 
                is a prerequisite.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> required by the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/>.
            </param>
            <param name="requiredMetadata">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> objects containing
                the metadata names of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> required by the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/>; or <see langword="null"/> to
                set the <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata"/> property to an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </param>
            <param name="cardinality">
                One of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality"/> values indicating the 
                cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects required by the
                <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/>.
            </param>
            <param name="isRecomposable">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/> can be satisfied 
                multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>, otherwise, 
                <see langword="false"/>.
            </param>
            <param name="isPrerequisite">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/> is required to be 
                satisfied before a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> can start producing exported 
                objects; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
                <para>
                    -or-
                </para>
                <paramref name="requiredMetadata"/> contains an element that is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="cardinality"/> is not one of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality"/> 
                values.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractName">
            <summary>
                Gets the contract name of the export required by the import definition.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> required by the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/>.
            </value>
            <exception cref="T:System.NotImplementedException">
                The property was not overridden by a derived class.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>
                    or an empty string ("").
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata">
            <summary>
                Gets the metadata names of the export required by the import definition.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> objects containing
                the metadata names of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> required by the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"/>. The default is an empty 
                <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </value>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>
                    or return an <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains an element that is
                    <see langword="null"/>. If the definition does not contain required metadata, 
                    return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> instead.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy">
            <summary>
                Gets or sets a value indicating that the importer requires a specific 
                <see cref="T:System.ComponentModel.Composition.CreationPolicy"/> for the exports used to satisfy this import. T
            </summary>
            <value>
                <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any"/> - default value, used if the importer doesn't 
                    require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy"/>.
            
                <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared"/> - Requires that all exports used should be shared
                    by everyone in the container.
            
                <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared"/> - Requires that all exports used should be 
                    non-shared in a container and thus everyone gets their own instance.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint">
            <summary>
                Gets an expression that defines conditions that must be matched for the import 
                described by the import definition to be satisfied.
            </summary>
            <returns>
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions that must be matched for the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> to be satisfied by an <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </returns>
            <remarks>
                <para>
                    This property returns an expression that defines conditions based on the 
                    <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractName"/> and <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata"/> properties.
                </para>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.Caching.AttributedModel.AttributedComposablePartCatalogSite">
            <summary>
            This cached catalog site is used by all catalogs that containe AttributedComposablePartDefinitions
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache.GetCacheCatalog(System.ComponentModel.Composition.Caching.ICachedComposablePartCatalogSite)">
            <summary>
            Returns the catalog that represents the cache. Note, that this is not the originally cached catalog, bur rather a representation
            of the cached part definitions.
            </summary>
            <param name="catalogSite"></param>
            <returns></returns>
        </member>
        <member name="P:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache.Metadata">
            <summary>
            Catalog metadata
            </summary>
        </member>
        <member name="P:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache.Reader">
            <summary>
            The reader that has provided the cache
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.ReadCacheCore(System.Object)">
            <summary>
            Reads the catalog cache given the cache token.
            </summary>
            <param name="cacheToken">The cache token.</param>
            <returns>The catalog cache corresponding to the specified cache token.</returns>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.ReadCatalog(System.Object)">
            <summary>
            Reads the catalog from the cache given the specified cache token. This methos trows if thew catalog with the given
            token doesn't exist.
            </summary>
            <param name="cacheToken">The cache token.</param>
            <returns>The catalog corresponding to the specified cache token.</returns>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.ReadRootCatalog">
            <summary>
            Reads the root catalog from the cache
            </summary>
            <returns>The root catalog.</returns>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.Dispose">
            <summary>
            Releases all the resources allocated by the <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader"/> and completes the cache writing.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.Dispose(System.Boolean)">
            <summary>
            Releases all the resources allocated by the <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> and completes the cache writing.
            </summary>
            <param name="disposing">Is called from Dispose() if set to <c>true</c>, otherwise is called from the finalizer.</param>
        </member>
        <member name="P:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.RootCacheToken">
            <summary>
            Returns the cache token corresponding to the root catalog in the cache.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter.WriteCache(System.Type,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.Collections.Generic.IDictionary{System.String,System.Object},System.ComponentModel.Composition.Caching.ICachedComposablePartCatalogSite)">
            <summary>
            Writes part definitions and catalog metadata into the cache.
            </summary>
            <param name="catalogType">Catalog type.</param>
            <param name="partDefinitions">Parts definitions.</param>
            <param name="catalogMetadata">Catalog Metadata.</param>
            <param name="catalogSite">Catalog Site</param>
            <returns>Catalog cache token. This value can be cached and used to locate this cache wen reading from the cache.</returns>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter.WriteCacheCore(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.Collections.Generic.IDictionary{System.String,System.Object},System.ComponentModel.Composition.Caching.ICachedComposablePartCatalogSite)">
            <summary>
            Writes part definitions and catalog metadata into the cache.
            </summary>
            <param name="partDefinitions">Parts definitions.</param>
            <param name="catalogMetadata">Catalog Metadata.</param>
            <param name="catalogSite">Catalog Site</param>
            <returns>Catalog cache token. This value can be cached and used to locate this cache wen reading from the cache.</returns>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter.WriteRootCacheToken(System.Object)">
            <summary>
            Sets "root" catalog of the cache - that is one that the corresponding <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache"/> will open first when the 
            appropriate storage is read. This method may be called multiple times; the last set value is expected to be written to the cache when the
            <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> is disposed.
            </summary>
            <param name="catalogToken">Value returned by a call to WriteCache.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter.Dispose">
            <summary>
            Releases all the resources allocated by the <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> and completes the cache writing.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter.Dispose(System.Boolean)">
            <summary>
            Releases all the resources allocated by the <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> and completes the cache writing.
            </summary>
            <param name="disposing">Is called from Dispose() if set to <c>true</c>, otherwise is called from the finalizer.</param>
        </member>
        <member name="T:System.ComponentModel.Composition.Caching.EmptyCachedComposablePartCatalogSite">
            <summary>
            This is used by catalogs that don't actually have any parts, but only metadata.
            We use this type when "null" is passed for the site.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ICachedComposablePartCatalog.CacheCatalog(System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter)">
            <summary>
            Caches the contents of the catalog using the specified  <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/>.
            </summary>
            <param name="writer">The cache writer.</param>
            <returns>The cache token corresponding to the written catalog cache.</returns>
        </member>
        <member name="P:System.ComponentModel.Composition.Caching.ICachedComposablePartCatalog.IsCacheUpToDate">
            <summary>
            Specifies whether the cache the state of the catalog has changed since the last time it was read from the cache.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.CardinalityMismatchException">
            <summary>
                The exception that is thrown when the cardinality of a <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>
                does not match the cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects available in an 
                <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CardinalityMismatchException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CardinalityMismatchException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/> class 
                with the specified error message.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CardinalityMismatchException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/> class 
                with the specified error message and exception that is the cause of the  
                exception.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
            <param name="innerException">
                The <see cref="T:System.Exception"/> that is the underlying cause of the 
                <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.InnerException"/> property to <see langword="null"/>.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CardinalityMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/> class 
                with the specified serialization data.
            </summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
                <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/>.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the 
                source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
                <paramref name="info"/> is missing a required value.
            </exception>
            <exception cref="T:System.InvalidCastException">
                <paramref name="info"/> contains a value that cannot be cast to the correct type.
            </exception>
        </member>
        <member name="T:System.ComponentModel.Composition.CatalogDiscoveryMode">
            <summary>
                Specifies when an attributed part is discovered by a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.CatalogDiscoveryMode.Auto">
            <summary>
                Indicates that an attributed part will be discovered by a 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/> if a member declared at the level of the type's 
                hierarchy, or if the type itself, is marked with the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/>,
                <see cref="T:System.ComponentModel.Composition.ImportingConstructorAttribute"/>, or <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> 
                attributes. Inherited members are not considered.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.CatalogDiscoveryMode.Never">
            <summary>
                Indicates that an attributed part will never be discovered by a 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.CatalogDiscoveryMode.Always">
            <summary>
                Indicates that an attributed part will be discovered by a 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/> if a member declared anywhere in the type's
                hierarchy, or if the type itself, is marked with the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/>,
                <see cref="T:System.ComponentModel.Composition.ImportingConstructorAttribute"/>, or <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> 
                attributes.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.ContractMismatchException">
            <summary>
                The exception that is thrown when the underlying exported object or metadata of an 
                <see cref="T:System.ComponentModel.Composition.Export`1"/> or <see cref="T:System.ComponentModel.Composition.Export`2"/> object cannot be 
                cast to <c>T</c> or <c>TMetadataView</c>, respectively.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractMismatchException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractMismatchException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/> class 
                with the specified error message.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractMismatchException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/> class 
                with the specified error message and exception that is the cause of the  
                exception.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
            <param name="innerException">
                The <see cref="T:System.Exception"/> that is the underlying cause of the 
                <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.InnerException"/> property to <see langword="null"/>.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/> class 
                with the specified serialization data.
            </summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
                <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/>.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the 
                source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
                <paramref name="info"/> is missing a required value.
            </exception>
            <exception cref="T:System.InvalidCastException">
                <paramref name="info"/> contains a value that cannot be cast to the correct type.
            </exception>
        </member>
        <member name="T:System.ComponentModel.Composition.CompositionError">
            <summary>
                Represents an error that occurs during composition in a <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionError"/> class
                with the specified error message.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.CompositionError.Message"/> property to an empty string ("").
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionError"/> class
                with the specified error message and composition element that is the
                cause of the composition error.
            </summary>
            <param name="element">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement"/> that is the cause of the
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>; or <see langword="null"/> to set
                the <see cref="P:System.ComponentModel.Composition.CompositionError.Element"/> property to 
                <see langword="null"/>.
            </param>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.CompositionError.Message"/> property to an empty string ("").
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionError"/> class 
                with the specified error message and exception that is the cause of the  
                composition error.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.CompositionError.Message"/> property to an empty string ("").
            </param>
            <param name="exception">
                The <see cref="P:System.ComponentModel.Composition.CompositionError.Exception"/> that is the underlying cause of the 
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>; or <see langword="null"/> to set
                the <see cref="P:System.ComponentModel.Composition.CompositionError.Exception"/> property to <see langword="null"/>.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionError"/> class 
                with the specified error message, and composition element and exception that 
                is the cause of the composition error.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.CompositionError.Message"/> property to an empty string ("").
            </param>
            <param name="element">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement"/> that is the cause of the
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>; or <see langword="null"/> to set
                the <see cref="P:System.ComponentModel.Composition.CompositionError.Element"/> property to 
                <see langword="null"/>.
            </param>
            <param name="exception">
                The <see cref="P:System.ComponentModel.Composition.CompositionError.Exception"/> that is the underlying cause of the 
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>; or <see langword="null"/> to set
                the <see cref="P:System.ComponentModel.Composition.CompositionError.Exception"/> property to <see langword="null"/>.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionError.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionError"/> class 
                with the specified serialization data.
            </summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the 
                source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
                <paramref name="info"/> is missing a required value.
            </exception>
            <exception cref="T:System.InvalidCastException">
                <paramref name="info"/> contains a value that cannot be cast to the correct type.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionError.ToString">
            <summary>
                Returns a string representation of the composition error.
            </summary>
            <returns>
                A <see cref="T:System.String"/> containing the <see cref="P:System.ComponentModel.Composition.CompositionError.Message"/> property.
            </returns>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionError.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Gets the serialization data of the exception.
            </summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the 
                source or destination.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionError.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Gets the serialization data of the exception.
            </summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the 
                source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionError.Element">
            <summary>
                Gets the composition element that is the cause of the error.
            </summary>
            <value>
                The <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement"/> that is the cause of the
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>. The default is <see langword="null"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionError.Message">
            <summary>
                Gets the message that describes the composition error.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing a message that describes the
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionError.Exception">
            <summary>
                Gets the exception that is the underlying cause of the composition error.
            </summary>
            <value>
                The <see cref="P:System.ComponentModel.Composition.CompositionError.Exception"/> that is the underlying cause of the 
                <see cref="T:System.ComponentModel.Composition.CompositionError"/>. The default is <see langword="null"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionResult`1.Value">
            <summary>
                Gets the value from the result, throwing a CompositionException if there are any errors.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportCollection`2">
            <summary>
                Represents a collection of <see cref="T:System.ComponentModel.Composition.Export`2"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> class 
                that is empty.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection`2.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Export{`0,`1}})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> class, 
                adding the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export`2"/> 
                objects to the collection.
            </summary>
            <param name="items">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to add 
                to the <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/>; or <see langword="null"/> to create 
                an <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> that is empty.
            </param>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportCollection`1">
            <summary>
                Represents a collection of <see cref="T:System.ComponentModel.Composition.Export`1"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> class 
                that is empty.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection`1.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Export{`0}})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> class,
                adding the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export`1"/> 
                objects to the collection.
            </summary>
            <param name="items">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export`1"/> objects to add 
                to the <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/>; or <see langword="null"/> to create an 
                <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> that is empty.
            </param>
        </member>
        <member name="T:System.ComponentModel.Composition.Export`2">
            <summary>
                Represents an export. That is, a type that is made up of a delay-created exported object, 
                metadata that describes that object and a strongly-typed view over that metadata.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.Export`1">
            <summary>
                Represents an export. That is, a type that is made up of a delay-created exported object
                and metadata that describes that object.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.Export">
            <summary>
                Represents an export. That is, a type that is made up of a delay-created exported object 
                and metadata that describes that object.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.Export.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override <see cref="P:System.ComponentModel.Composition.Primitives.Export.Definition"/>
                    and <see cref="M:System.ComponentModel.Composition.Primitives.Export.GetExportedObjectCore"/>.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.Export.#ctor(System.String,System.Func{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> class 
                with the specified contract name and exported object getter.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>. This allows the creation of the object to be delayed 
                until <see cref="M:System.ComponentModel.Composition.Primitives.Export.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.Export.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Func{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> class 
                with the specified contract name, metadata and exported object getter.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </param>
            <param name="metadata">
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.Primitives.Export.Metadata"/> property to an empty, read-only 
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>. This allows the creation of the object to be delayed 
                until <see cref="M:System.ComponentModel.Composition.Primitives.Export.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.Export.#ctor(System.ComponentModel.Composition.Primitives.ExportDefinition,System.Func{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> class 
                with the specified export definition and exported object getter.
            </summary>
            <param name="definition">
                An <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> that describes the contract that the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> satisfies.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>. This allows the creation of the object to be delayed 
                until  <see cref="M:System.ComponentModel.Composition.Primitives.Export.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.Export.GetExportedObject">
            <summary>
                Returns the exported object of the export.
            </summary>
            <returns>
                The exported <see cref="T:System.Object"/> of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </returns>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will 
                contain a collection of errors that occurred.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The current instance is an instance of <see cref="T:System.ComponentModel.Composition.Export`1"/> and the underlying 
                exported object cannot be cast to <c>T</c>.
            </exception>
            <exception cref="T:System.NotImplementedException">
                The <see cref="M:System.ComponentModel.Composition.Primitives.Export.GetExportedObjectCore"/> method was not overridden by a derived class.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.Export.GetExportedObjectCore">
            <summary>
                Returns the exported object of the export.
            </summary>
            <returns>
                The exported <see cref="T:System.Object"/> of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </returns>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will 
                contain a collection of errors that occurred.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The current instance is an instance of <see cref="T:System.ComponentModel.Composition.Export`1"/> and the underlying 
                exported object cannot be cast to <c>T</c>.
            </exception>
            <exception cref="T:System.NotImplementedException">
                The method was not overridden by a derived class.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this method should never return
                    <see langword="null"/>.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.Export.Definition">
            <summary>
                Gets the definition that describes the contract that the export satisfies.
            </summary>
            <value>
                An <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> that describes the contract that 
                the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> satisfies.
            </value>
            <exception cref="T:System.NotImplementedException">
                This property was not overridden by a derived class.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return
                    <see langword="null"/>.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.Export.Metadata">
            <summary>
                Gets the metadata of the export.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </value>
            <exception cref="T:System.NotImplementedException">
                The <see cref="P:System.ComponentModel.Composition.Primitives.Export.Definition"/> property was not overridden by a derived class.
            </exception>
            <remarks>
                <para>
                    This property returns the value of <see cref="P:System.ComponentModel.Composition.Primitives.ExportDefinition.Metadata"/>
                    of the <see cref="P:System.ComponentModel.Composition.Primitives.Export.Definition"/> property.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`1"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override <see cref="P:System.ComponentModel.Composition.Primitives.Export.Definition"/>
                    and <see cref="M:System.ComponentModel.Composition.Primitives.Export.GetExportedObjectCore"/>.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.#ctor(System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`1"/> class 
                with the specified exported object getter and using a contract 
                name derived from <typeparamref name="T"/>.
            </summary>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>. This allows the creation of the object to be delayed 
                until  <see cref="M:System.ComponentModel.Composition.Export`1.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <remarks>
                <para>
                    The <see cref="P:System.ComponentModel.Composition.Primitives.ExportDefinition.ContractName"/> property of <see cref="P:System.ComponentModel.Composition.Primitives.Export.Definition"/> 
                    is the result of calling <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on 
                    <typeparamref name="T"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.#ctor(System.String,System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`1"/> class 
                with the specified contract name and exported object getter.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>. This allows the creation of the object to be delayed 
                until <see cref="M:System.ComponentModel.Composition.Export`1.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`1"/> class 
                with the specified contract name, metadata and exported object getter.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>.
            </param>
            <param name="metadata">
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.Primitives.Export.Metadata"/> property to an empty, read-only 
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>. This allows the creation of the object to be delayed 
                until  <see cref="M:System.ComponentModel.Composition.Export`1.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.#ctor(System.ComponentModel.Composition.Primitives.ExportDefinition,System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`1"/> class 
                with the specified export definition and exported object getter.
            </summary>
            <param name="definition">
                An <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> that describes the contract that the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/> satisfies.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>. This allows the creation of the object to be delayed 
                until  <see cref="M:System.ComponentModel.Composition.Export`1.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.GetExportedObject">
            <summary>
                Returns the exported object of the export.
            </summary>
            <returns>
                A <typeparamref name="T"/> representing the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>.
            </returns>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will
                contain a collection of errors that occurred.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The underlying exported object cannot be cast to <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.NotImplementedException">
                The <see cref="M:System.ComponentModel.Composition.Primitives.Export.GetExportedObjectCore"/> method was not overridden by a derived class.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`2"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> 
                    and <see cref="M:System.ComponentModel.Composition.Primitives.Export.GetExportedObjectCore"/>.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`2.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`1"/> class 
                with the specified metadata, exported object getter and using a 
                contract name derived from <typeparamref name="T"/>.
            </summary>
            <param name="metadata">
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.Primitives.Export.Metadata"/> property to an empty, read-only 
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>. This allows the creation of the object to be delayed 
                until <see cref="M:System.ComponentModel.Composition.Export`1.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <remarks>
                <para>
                    The <see cref="P:System.ComponentModel.Composition.Primitives.ExportDefinition.ContractName"/> property of <see cref="P:System.ComponentModel.Composition.Primitives.Export.Definition"/> 
                    is the result of calling <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on 
                    <typeparamref name="T"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`2.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`2"/> class 
                with the specified contract name, metadata and exported object getter.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/>.
            </param>
            <param name="metadata">
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.Primitives.Export.Metadata"/> property to an empty, read-only 
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/>. This allows the creation of the object to be delayed 
                until <see cref="M:System.ComponentModel.Composition.Export`1.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`2.#ctor(System.ComponentModel.Composition.Primitives.ExportDefinition,System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`2"/> class 
                with the specified export definition and exported object getter.
            </summary>
            <param name="definition">
                An <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> that describes the contract that the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> satisfies.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/>. This allows the creation of the object to be delayed 
                until <see cref="M:System.ComponentModel.Composition.Export`1.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Export`2.MetadataView">
            <summary>
                Gets the metadata view for the export.
            </summary>
            <value>
                A <typeparamref name="TMetadataView"/> representing the strongly-typed metadata view 
                for the <see cref="T:System.ComponentModel.Composition.Export`2"/>.
            </value>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The <see cref="P:System.ComponentModel.Composition.Primitives.Export.Metadata"/> property cannot be converted to <typeparamref name="TMetadataView"/>.
            </exception>
            <exception cref="T:System.NotImplementedException">
                The <see cref="P:System.ComponentModel.Composition.Primitives.Export.Definition"/> property was not overridden by a derived class.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                <typeparamref name="TMetadataView"/> is not a valid metadata view type.
            </exception>
            <remarks>
                <para>
                    This property represents a strong-typed view over the <see cref="P:System.ComponentModel.Composition.Primitives.Export.Metadata"/> property.
                </para>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.Hosting.ExportProvider">
            <summary>
                Defines the <see langword="abstract"/> base class for export providers, which provide
                methods for retrieving <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
                Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="definition">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects to get.
            </param>
            <result>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects that match 
                the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>, if found; otherwise, an 
                empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality"/> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne"/> and 
                    there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects that match the conditions of the specified 
                    <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>.
                </para>
                -or-
                <para>
                    <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality"/> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne"/> or 
                    <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne"/> and there are more than one <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> 
                    objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>.
                </para>
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)">
            <summary>
                Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="definition">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects to get.
            </param>
            <param name="exports">
                When this method returns, contains an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> 
                objects that match the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>, if found; 
                otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </param>
            <returns>
                <see langword="true"/> if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality"/> is 
                <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne"/> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore"/> and 
                there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects that match the conditions of the specified 
                <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>. <see langword="true"/> if 
                <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality"/> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne"/> or 
                <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne"/> and there is exactly one <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> 
                that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>; otherwise, 
                <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
                Returns all exports that match the constraint defined by the specified definition.
            </summary>
            <param name="definition">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects to return.
            </param>
            <result>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects that match 
                the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>, if found; otherwise, an 
                empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this method should not treat cardinality-related mismatches 
                    as errors, and should not throw exceptions in those cases. For instance,
                    if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality"/> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne"/> 
                    and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects that match the conditions of the 
                    specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>, an <see cref="T:System.Collections.Generic.IEnumerable`1"/> should be returned.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs)">
            <summary>
                Raises the <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged"/> event.
            </summary>
            <param name="e">
                An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/> containing the data for the event.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1">
            <summary>
                Returns the export with the contract name derived from the specified type parameter, 
                throwing an exception if there is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> object to return. The contract name is also 
                derived from this type parameter.
            </typeparam>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`1"/> object with the contract name derived from 
                <typeparamref name="T"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> object is an instance of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`1"/> objects with the contract name derived 
                    from <typeparamref name="T"/> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`1"/> objects with the contract name 
                    derived from <typeparamref name="T"/> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)">
            <summary>
                Returns the export with the specified contract name, throwing an exception if there 
                is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> object to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the <see cref="T:System.ComponentModel.Composition.Export`1"/> 
                object to return; or <see langword="null"/> or an empty string ("") to use the 
                default contract name.
            </param>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`1"/> object with the specified contract name.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> object is an instance of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The default contract name is compared using a case-sensitive, non-linguistic 
                    comparison using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`1"/> objects with the specified contract name 
                    in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`1"/> objects with the specified contract
                    name in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the export that matches the conditions defined by the specified constraint, 
                throwing an exception if there is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> object to return.
            </typeparam>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Export`1"/> object to return or 
                <see langword="null"/> to use the default contract name as the constraint.
            </param>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`1"/> object that matches the conditions defined by 
                <paramref name="constraint"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> object is an instance of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The default contract name is compared using a case-sensitive, non-linguistic 
                    comparison using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`1"/> objects that match the conditions 
                    defined by <paramref name="constraint"/> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`1"/> objects that match the conditions 
                    defined by <paramref name="constraint"/> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2">
            <summary>
                Returns the export with the contract name derived from the specified type parameter, 
                throwing an exception if there is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object to return. The 
                contract name is also derived from this type parameter.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object
                to return.
            </typeparam>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`2"/> object with the contract name derived 
                from <typeparamref name="T"/>.
            </returns>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the contract 
                    name derived from <typeparamref name="T"/> in the 
                    <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the 
                    contract name derived from <typeparamref name="T"/> in the 
                    <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
                <typeparamref name="TMetadataView"/> is not a valid metadata view type.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)">
            <summary>
                Returns the export with the specified contract name, throwing an exception if there 
                is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object to return.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object
                to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> object to return; or <see langword="null"/> 
                or an empty string ("") to use the default contract name.
            </param>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`2"/> object with the specified contract name.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the 
                    specified contract name in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the 
                    specified contract name in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
                <typeparamref name="TMetadataView"/> is not a valid metadata view type.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the export that matches the conditions defined by the specified constraint,
                throwing an exception if there is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object to return.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object
                to return.
            </typeparam>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object to 
                return or <see langword="null"/> to use the default contract name as the constraint.
            </param>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`2"/> object that matches the conditions 
                defined by <paramref name="constraint"/>.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`2"/> objects that match the 
                    conditions defined by <paramref name="constraint"/> in the 
                    <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`2"/> objects that match 
                    the conditions defined by <paramref name="constraint"/> in the 
                    <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
                <typeparamref name="TMetadataView"/> is not a valid metadata view type.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the exports that match the conditions defined by the specified constraint.
            </summary>
            <param name="type">
                The <see cref="T:System.Type"/> of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects to return.
            </param>
            <param name="metadataViewType">
                The <see cref="T:System.Type"/> of the metadata view of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects to
                return.
            </param>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects to return or
                <see langword="null"/> to use the default contract name as the constraint.
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection"/> containing the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects that 
                match the conditions defined by the specified constraint, if found; otherwise, an 
                empty <see cref="T:System.ComponentModel.Composition.ExportCollection"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects are instances of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where <c>T</c>
                    is <paramref name="type"/> and <c>TMetadataView</c> is 
                    <paramref name="metadataViewType"/>.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <paramref name="type"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="type"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                <paramref name="metadataViewType"/> is not a valid metadata view type.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1">
            <summary>
                Returns the exports with the contract name derived from the specified type parameter.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects to return. The contract name is also 
                derived from this type parameter.
            </typeparam>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> containing the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects
                with the contract name derived from <typeparamref name="T"/>, if found; otherwise,
                an empty <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> objects are instances of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)">
            <summary>
                Returns the exports with the specified contract name.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the <see cref="T:System.ComponentModel.Composition.Export`1"/> 
                objects to return; or <see langword="null"/> or an empty string ("") to use the 
                default contract name.
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> containing the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects
                with the specified contract name, if found; otherwise, an empty 
                <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> objects are instances of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the exports that match the conditions defined by the specified constraint.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects to return.
            </typeparam>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects to 
                return or <see langword="null"/> to use the default contract name as the constraint.
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> containing the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects
                that match the conditions defined by the specified constraint, if found; otherwise, 
                an empty <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> objects are instances of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2">
            <summary>
                Returns the exports with the contract name derived from the specified type parameter.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to return. The 
                contract name is also derived from this type parameter.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects
                to return.
            </typeparam>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the contract name derived from 
                <typeparamref name="T"/>, if found; otherwise, an empty 
                <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/>.
            </returns>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
                <typeparamref name="TMetadataView"/> is not a valid metadata view type.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)">
            <summary>
                Returns the exports with the specified contract name.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to return. The 
                contract name is also derived from this type parameter.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects
                to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to return; or <see langword="null"/> 
                or an empty string ("") to use the default contract name.
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the specified contract name if 
                found; otherwise, an empty <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/>.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
                <typeparamref name="TMetadataView"/> is not a valid metadata view type.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the exports that match the conditions defined by the specified constraint.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to return.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects
                to return.
            </typeparam>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to 
                return or <see langword="null"/> to use the default contract name as the constraint.
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> objects that match the conditions defined by 
                the specified constraint, if found; otherwise, an empty 
                <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/>.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
                <typeparamref name="TMetadataView"/> is not a valid metadata view type.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedObject``1">
            <summary>
                Returns the exported object with the contract name derived from the specified type 
                parameter, throwing an exception if there is not exactly one matching exported object.
            </summary>
            <typeparam name="T">
                The type of the exported object to return. The contract name is also 
                derived from this type parameter.
            </typeparam>
            <returns>
                The exported <see cref="T:System.Object"/> with the contract name derived from 
                <typeparamref name="T"/>.
            </returns>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The underlying exported object cannot be cast to <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero exported objects with the contract name derived from 
                    <typeparamref name="T"/> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one exported objects with the contract name derived from
                    <typeparamref name="T"/> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will 
                contain a collection of errors that occurred.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedObject``1(System.String)">
            <summary>
                Returns the exported object with the specified contract name, throwing an exception 
                if there is not exactly one matching exported object.
            </summary>
            <typeparam name="T">
                The type of the exported object to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the exported object to return,
                or <see langword="null"/> or an empty string ("") to use the default contract name.
            </param>
            <returns>
                The exported <see cref="T:System.Object"/> with the specified contract name.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The underlying exported object cannot be cast to <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero exported objects with the specified contract name in the 
                    <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one exported objects with the specified contract name in the
                    <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will 
                contain a collection of errors that occurred.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedObjectOrDefault``1">
            <summary>
                Returns the exported object with the contract name derived from the specified type 
                parameter, throwing an exception if there is more than one matching exported object.
            </summary>
            <typeparam name="T">
                The type of the exported object to return. The contract name is also 
                derived from this type parameter.
            </typeparam>
            <returns>
                The exported <see cref="T:System.Object"/> with the contract name derived from 
                <typeparamref name="T"/>, if found; otherwise, the default value for
                <typeparamref name="T"/>.
            </returns>
            <remarks>
                <para>
                    If the exported object is not found, then this method returns the appropriate 
                    default value for <typeparamref name="T"/>; for example, 0 (zero) for integer 
                    types, <see langword="false"/> for Boolean types, and <see langword="null"/> 
                    for reference types.
                </para>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The underlying exported object cannot be cast to <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are more than one exported objects with the contract name derived from
                    <typeparamref name="T"/> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will 
                contain a collection of errors that occurred.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedObjectOrDefault``1(System.String)">
            <summary>
                Returns the exported object with the specified contract name, throwing an exception 
                if there is more than one matching exported object.
            </summary>
            <typeparam name="T">
                The type of the exported object to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the exported object to return,
                or <see langword="null"/> or an empty string ("") to use the default contract name.
            </param>
            <returns>
                The exported <see cref="T:System.Object"/> with the specified contract name, if found; 
                otherwise, the default value for <typeparamref name="T"/>.
            </returns>
            <remarks>
                <para>
                    If the exported object is not found, then this method returns the appropriate 
                    default value for <typeparamref name="T"/>; for example, 0 (zero) for integer 
                    types, <see langword="false"/> for Boolean types, and <see langword="null"/> 
                    for reference types.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The underlying exported object cannot be cast to <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                There are more than one exported objects with the specified contract name in the
                <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will 
                contain a collection of errors that occurred.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedObjects``1">
            <summary>
                Returns the exported objects with the contract name derived from the specified type 
                parameter.
            </summary>
            <typeparam name="T">
                The type of the exported object to return. The contract name is also 
                derived from this type parameter.
            </typeparam>
            <returns>
                An <see cref="T:System.Collections.ObjectModel.Collection`1"/> containing the exported objects with the contract name 
                derived from the specified type parameter, if found; otherwise, an empty 
                <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </returns>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                One or more of the underlying exported objects cannot be cast to 
                <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will 
                contain a collection of errors that occurred.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedObjects``1(System.String)">
            <summary>
                Returns the exported objects with the specified contract name.
            </summary>
            <typeparam name="T">
                The type of the exported object to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the exported objects to 
                return; or <see langword="null"/> or an empty string ("") to use the default 
                contract name.
            </param>
            <returns>
                An <see cref="T:System.Collections.ObjectModel.Collection`1"/> containing the exported objects with the specified 
                contract name, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                One or more of the underlying exported objects cannot be cast to 
                <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will 
                contain a collection of errors that occurred.
            </exception>
        </member>
        <member name="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged">
            <summary>
                Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> change.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AdaptingExportProvider.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AdaptingExportProvider"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AdaptingExportProvider.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AdaptingExportProvider.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AdaptingExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Composition.Hosting.AggregateExportProvider.ExportsChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AdaptingExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
            Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="definition">The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the
            <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> to get.</param>
            <returns></returns>
            <result>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects that match
            the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>, if found; otherwise, an
            empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
            	<note type="inheritinfo">
            The implementers should not treat the cardinality-related mismatches as errors, and are not
            expected to throw exceptions in those cases.
            For instance, if the import requests exactly one export and the provider has no matching exports or more than one,
            it should return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.AdaptingExportProvider.SourceProvider">
            <summary>
                Gets the export provider which provides the provider access to additional
                exports.
            </summary>
            <value>
                The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> which provides the 
                <see cref="T:System.ComponentModel.Composition.Hosting.AdaptingExportProvider"/> access to additional
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects. The default is <see langword="null"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                This property has already been set.
                <para>
                    -or-
                </para>
                The methods on the <see cref="T:System.ComponentModel.Composition.Hosting.AdaptingExportProvider"/> 
                have already been accessed.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.AdaptingExportProvider"/> has been disposed of.
            </exception>
            <remarks>
                This property must be set before accessing any methods on the 
                <see cref="T:System.ComponentModel.Composition.Hosting.AdaptingExportProvider"/>.
            </remarks>
        </member>
        <member name="E:System.ComponentModel.Composition.Hosting.AdaptingExportProvider.ExportsChanged">
            <summary>
                Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> change.
            </summary>
            <remarks>
                The <see cref="E:System.ComponentModel.Composition.Hosting.AdaptingExportProvider.ExportsChanged"/> event passes an <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/>
                which provides a list of contract names for the exports that have changed. An export
                is considered to have changed if it has been added, removed, or updated in the 
                <see cref="T:System.ComponentModel.Composition.Hosting.AdaptingExportProvider"/>.
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
            <summary>
                A mutable collection of ComposablePartCatalogs.  The events are called back using the
                synchronization context created when the instance is constructed.
            </summary>
            <remarks>
                This type is thread safe.
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog">
            <summary>
                Defines the <see langword="abstract"/> base class for composable part catalogs, which produce
                and return <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> objects.
            </summary>
            <remarks>
                This type is thread safe.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
                Returns the export definitions that match the constraint defined by the specified definition.
            </summary>
            <param name="definition">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects to return.
            </param>
            <returns>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.TempTuple`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects and their associated 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> for objects that match the constraint defined 
                by <paramref name="definition"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/> has been disposed of.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>, if no 
                    <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> match the conditions defined by 
                    <paramref name="definition"/>, return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose">
            <summary>
                Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/> and 
                optionally releases the managed resources.
            </summary>
            <param name="disposing">
                <see langword="true"/> to release both managed and unmanaged resources; 
                <see langword="false"/> to release only unmanaged resources.
            </param>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts">
            <summary>
                Gets the part definitions of the catalog.
            </summary>
            <value>
                A <see cref="T:System.Linq.IQueryable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> objects of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/> has been disposed of.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>.
                </note>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.INotifyComposablePartCatalogChanged">
            <summary>
                Notifications when a ComposablePartCatalog changes.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog"/> class
                with the specified catalogs.
            </summary>
            <param name="catalogs">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/> objects to add
                to the <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog"/>; or <see langword="null"/> to 
                create an <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog"/> that is empty.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="catalogs"/> contains an element that is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
                Returns the export definitions that match the constraint defined by the specified definition.
            </summary>
            <param name="definition">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects to return.
            </param>
            <returns>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.TempTuple`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects and their associated 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> for objects that match the constraint defined 
                by <paramref name="definition"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Parts">
            <summary>
                Gets the part definitions of the catalog.
            </summary>
            <value>
                A <see cref="T:System.Linq.IQueryable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> objects of the 
                <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs">
            <summary>
                Gets the underlying catalogs of the catalog.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.ICollection`1"/> of underlying <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/> objects
                of the <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed">
            <summary>
            Notify when the contents of the Catalog has changed.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider"/> class.
            </summary>
            <param name="providers">The prioritized list of export providers.</param>
            <remarks>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider"/> will consult the providers in the order they have been specfied when 
                    executing <see cref="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)"/>. 
                </para>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider"/> does not take ownership of the specified providers. 
                    That is, it will not try to dispose of any of them when it gets disposed.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider"/> class.
            </summary>
            <param name="providers">The prioritized list of export providers. The providers are consulted in order in which they are supplied.</param>
            <remarks>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider"/> will consult the providers in the order they have been specfied when 
                    executing <see cref="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)"/>. 
                </para>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider"/> does not take ownership of the specified providers. 
                    That is, it will not try to dispose of any of them when it gets disposed.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Composition.Hosting.AggregateExportProvider.ExportsChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
            Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="definition">The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the
            <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> to get.</param>
            <returns></returns>
            <result>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects that match
            the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>, if found; otherwise, an
            empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
            	<note type="inheritinfo">
            The implementers should not treat the cardinality-related mismatches as errors, and are not
            expected to throw exceptions in those cases.
            For instance, if the import requests exactly one export and the provider has no matching exports or more than one,
            it should return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers">
            <summary>
                Gets the export providers which the aggregate export provider aggregates.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> objects
                which the <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider"/> aggregates.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider"/> has been disposed of.
            </exception>
        </member>
        <member name="E:System.ComponentModel.Composition.Hosting.AggregateExportProvider.ExportsChanged">
            <summary>
                Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> change.
            </summary>
            <remarks>
                The <see cref="E:System.ComponentModel.Composition.Hosting.AggregateExportProvider.ExportsChanged"/> event passes an <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/>
                which provides a list of contract names for the exports that have changed. An export
                is considered to have changed if it has been added, removed, or updated in the 
                <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider"/> has been disposed of.
            </exception>
        </member>
        <member name="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog">
            <summary>
                An immutable ComposablePartCatalog created from a managed code assembly.
            </summary>
            <remarks>
                This type is thread safe.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog"/> class 
                with the specified code base.
            </summary>
            <param name="codeBase">
                A <see cref="T:System.String"/> containing the code base of the assembly containing the
                attributed <see cref="T:System.Type"/> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="codeBase"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="codeBase"/> is a zero-length string, contains only white space, 
                or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"/>.
            </exception>
            <exception cref="T:System.IO.PathTooLongException">
                The specified path, file name, or both exceed the system-defined maximum length. 
            </exception>
            <exception cref="T:System.Security.SecurityException">
                The caller does not have path discovery permission. 
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
                <paramref name="codeBase"/> is not found.
            </exception>
            <exception cref="T:System.IO.FileLoadException">
                <paramref name="codeBase"/> could not be loaded.
                <para>
                    -or-
                </para>
                <paramref name="codeBase"/> specified a directory.
            </exception>
            <exception cref="T:System.BadImageFormatException">
                <paramref name="codeBase"/> is not a valid assembly
                -or- 
                Version 2.0 or later of the common language runtime is currently loaded 
                and <paramref name="codeBase"/> was compiled with a later version. 
            </exception>
            <remarks>
                The assembly referenced by <paramref langword="codeBase"/> is loaded into the Load context.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog"/> class 
                with the specified assembly.
            </summary>
            <param name="assembly">
                The <see cref="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly"/> containing the attributed <see cref="T:System.Type"/> objects to 
                add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog"/>.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="assembly"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>    
                <paramref name="assembly"/> was loaded in the reflection-only context.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
                Returns the export definitions that match the constraint defined by the specified definition.
            </summary>
            <param name="definition">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects to return.
            </param>
            <returns>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.TempTuple`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects and their associated 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> for objects that match the constraint defined 
                by <paramref name="definition"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString">
            <summary>
                Returns a string representation of the assembly catalog.
            </summary>
            <returns>
                A <see cref="T:System.String"/> containing the string representation of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog"/>.
            </returns>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts">
            <summary>
                Gets the part definitions of the assembly catalog.
            </summary>
            <value>
                A <see cref="T:System.Linq.IQueryable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> objects of the 
                <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly">
            <summary>
                Gets the assembly containing the attributed types contained within the assembly
                catalog.
            </summary>
            <value>
                The <see cref="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly"/> containing the attributed <see cref="T:System.Type"/> objects
                contained within the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
            <summary>
                Gets the display name of the assembly catalog.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing a human-readable display name of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
            <summary>
                Gets the composition element from which the assembly catalog originated.
            </summary>
            <value>
                This property always returns <see langword="null"/>.
            </value>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider"/> class.
            </summary>
            <param name="catalog">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/> that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider"/>
                uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="catalog"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
            Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="definition">The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the
            <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> to get.</param>
            <returns></returns>
            <result>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects that match
            the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>, if found; otherwise, an
            empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
            	<note type="inheritinfo">
            The implementers should not treat the cardinality-related mismatches as errors, and are not
            expected to throw exceptions in those cases.
            For instance, if the import requests exactly one export and the provider has no matching exports or more than one,
            it should return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Composition.Hosting.AggregateExportProvider.ExportsChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog">
            <summary>
                Gets the composable part catalog that the provider users to 
                produce exports.
            </summary>
            <value>
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/> that the 
                <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider"/>
                uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider">
            <summary>
                Gets the export provider which provides the provider access to additional
                exports.
            </summary>
            <value>
                The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> which provides the 
                <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider"/> access to additional
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects. The default is <see langword="null"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                This property has already been set.
                <para>
                    -or-
                </para>
                The methods on the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider"/> 
                have already been accessed.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider"/> has been disposed of.
            </exception>
            <remarks>
                This property must be set before accessing any methods on the 
                <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider"/>.
            </remarks>
        </member>
        <member name="E:System.ComponentModel.Composition.Hosting.CatalogExportProvider.ExportsChanged">
            <summary>
                Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> change.
            </summary>
            <remarks>
                The <see cref="E:System.ComponentModel.Composition.Hosting.CatalogExportProvider.ExportsChanged"/> event passes an <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/>
                which provides a list of contract names for the exports that have changed. An export
                is considered to have changed if it has been added, removed, or updated in the 
                <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider"/>.
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection">
            <summary>
                This class implements a threadsafe ICollection{T} of ComposablePartCatalog.
                It is exposed as an ICollection(ComposablePartCatalog)
                It is threadsafe, notifications are not marshalled using a SynchronizationContext.
                It is Disposable.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
            Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="definition">The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the
            <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> to get.</param>
            <returns></returns>
            <result>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects that match
            the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>, if found; otherwise, an
            empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
            	<note type="inheritinfo">
            The implementers should not treat the cardinality-related mismatches as errors, and are not
            expected to throw exceptions in those cases.
            For instance, if the import requests exactly one export and the provider has no matching exports or more than one,
            it should return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ExportsChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.SourceProvider">
            <summary>
                Gets the export provider which provides the provider access to
                exports.
            </summary>
            <value>
                The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> which provides the 
                <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"/> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects. 
                The default is <see langword="null"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                This property has already been set.
                <para>
                    -or-
                </para>
                The methods on the <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"/> 
                have already been accessed.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"/> has been disposed of.
            </exception>
            <remarks>
                This property must be set before accessing any methods on the 
                <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"/>.
            </remarks>
        </member>
        <member name="E:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.ExportsChanged">
            <summary>
            Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> change.
            </summary>
            <remarks>
            The <see cref="E:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.ExportsChanged"/> event passes an <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/>
            which provides a list of contract names for the exports that have changed. An export
            is considered to have changed if it has been added, removed, or updated in the
            <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/>.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart})">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/> class.
            </summary>
            <param name="partsToAdd">The parts to add.</param>
            <param name="partsToRemove">The parts to remove.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="partsToAdd"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="partsToRemove"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddPart(System.ComponentModel.Composition.Primitives.ComposablePart)">
            <summary>
                Adds the specified part to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>.
            </summary>
            <param name="part">
            The part.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.RemovePart(System.ComponentModel.Composition.Primitives.ComposablePart)">
            <summary>
                Removes the specified part from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>.
            </summary>
            <param name="part">
            The part.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddExportedObject``1(``0)">
            <summary>
                Adds the specified object to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>, exporting it under a contract 
                name derived from the specified type parameter.
            </summary>
            <typeparam name="T">
                The type of the object to add. The contract name is also derived from this type 
                parameter.
            </typeparam>
            <param name="exportedObject">
                The <see cref="T:System.Object"/> to add to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>. This can
                be <see langword="null"/>.
            </param>
            <returns>
                A <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> that can be used remove the <see cref="T:System.Object"/>
                from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>.
            </returns>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddExportedObject(System.String,System.Object)">
            <summary>
                Adds the specified object to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>, exporting it under the specified 
                contract name.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name to export the <see cref="T:System.Object"/> 
                under.
            </param>
            <param name="exportedObject">
                The <see cref="T:System.Object"/> to add to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>. This can
                be <see langword="null"/>.
            </param>
            <returns>
                A <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> that can be used remove the <see cref="T:System.Object"/>
                from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
            <remarks>
            </remarks>
            
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddExport(System.ComponentModel.Composition.Primitives.Export)">
            <summary>
                Adds the specified export to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>.
            </summary>
            <param name="export">
                The <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> to add to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>.
            </param>
            <returns>
                A <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> that can be used remove the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>
                from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="export"/> is <see langword="null"/>.
            </exception>
            <remarks>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddPart(System.Object)">
            <summary>
                Adds the specified attributed composable part to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>.
            </summary>
            <param name="attributedPart">
                An <see cref="T:System.Object"/> containing the attributed composable part to add to the 
                <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>.
            </param>
            <returns>
                A <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> that can be used remove the composable part from
                the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="attributedPart"/> is <see langword="null"/>.
            </exception>
            <remarks>
                <para>
                    This method is equivalent to passing <paramref name="attributedPart"/> to 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.CreateAttributedPart(System.Object)"/> and passing the created 
                    instance to <see cref="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddPart(System.ComponentModel.Composition.Primitives.ComposablePart)"/>. 
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToAdd">
            <summary>
            Returns the collection of parts that will be added.
            </summary>
            <value>The parts to be added.</value>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToRemove">
            <summary>
            Returns the collection of parts that will be removed.
            </summary>
            <value>The parts to be removed.</value>
        </member>
        <member name="T:System.ComponentModel.Composition.ICompositionService">
            <summary>
                Provides methods for composing <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ICompositionService.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.Boolean)">
            <summary>
                Sets the imports of the specified composable part and registering for it for 
                recomposition.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> to set the imports and register for recomposition.
            </param>
            <param name="registerForRecomposition">
                Indicates whether the part will keep recomposing after the initial import satisfaction
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will
                contain a collection of errors that occurred.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ICompositionService.UnregisterForRecomposition(System.ComponentModel.Composition.Primitives.ComposablePart)">
            <summary>
                Unregisters the specified part from recomposition.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> to unregister from recomposition.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> class 
                with the specified export providers.
            </summary>
            <param name="providers">
                A <see cref="T:System.Array"/> of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> objects which provide 
                the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects,
                or <see langword="null"/> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers"/> to an empty
                <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/>.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="providers"/> contains an element that is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> class 
                with the specified catalog and export providers.
            </summary>
            <param name="providers">
                A <see cref="T:System.Array"/> of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> objects which provide 
                the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects,
                or <see langword="null"/> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers"/> to an empty 
                <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/>.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="providers"/> contains an element that is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
            <summary>
                Releases the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>. Depending 
                on which <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> this <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> came from Release will cause
                different behavior to occur.
            
                For example the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider"/> will only release 
                an <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> if it comes from a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> that was constructed
                under a <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared"/> context. Release in this context means walking
                the dependency chain of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>s and removing references and calling Dispose on 
                the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>s as needed. If the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> was constructed under
                a <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared"/> context the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider"/>
                will do nothing because it is a shared <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> and may be in use by other requestors. 
            </summary>
            <param name="export"><see cref="T:System.ComponentModel.Composition.Primitives.Export"/> that needs to be released.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="export"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.Boolean)">
            <summary>
                Satisfies the imports of the specified composable part and registering for it for 
                recomposition if requested.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> to set the imports and register for recomposition.
            </param>
            <param name="registerForRecomposition">
                Indicates whether the part will keep recomposing after the initial import satisfaction
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will
                contain a collection of errors that occurred.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.UnregisterForRecomposition(System.ComponentModel.Composition.Primitives.ComposablePart)">
            <summary>
                Unregisters the specified part from recomposition.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> to unregister from recomposition.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs)">
            <summary>
                Raises the <see cref="E:System.ComponentModel.Composition.Hosting.CompositionContainer.ExportsChanged"/> event.
            </summary>
            <param name="e">
                An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/> containing the event data.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
            Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="definition">The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the
            <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> to get.</param>
            <returns></returns>
            <result>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects that match
            the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>, if found; otherwise, an
            empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
            	<note type="inheritinfo">
            The implementers should not treat the cardinality-related mismatches as errors, and are not
            expected to throw exceptions in those cases.
            For instance, if the import requests exactly one export and the provider has no matching exports or more than one,
            it should return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>.
            </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
            <summary>
                Gets the catalog which provides the container access to exports produced
                from composable parts.
            </summary>
            <value>
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/> which provides the 
                <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> access to exports produced from
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> objects. The default is <see langword="null"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
            <summary>
                Gets the export providers which provide the container access to additional exports.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> objects
                which provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> access to additional
                <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects. The default is an empty 
                <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="E:System.ComponentModel.Composition.Hosting.CompositionContainer.ExportsChanged">
            <summary>
                Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> change.
            </summary>
            <remarks>
                The <see cref="E:System.ComponentModel.Composition.Hosting.CompositionContainer.ExportsChanged"/> event passes an <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/>
                which provides a list of contract names for the exports that have changed. An export
                is considered to have changed if it has been added, removed, or updated in the 
                <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider"/>.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionEngine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionEngine"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionEngine.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionEngine.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.Boolean)">
            <summary>
                Satisfies the imports of the specified composable part and registering for it for 
                recomposition if requested.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> to set the imports and register for recomposition.
            </param>
            <param name="registerForRecomposition">
                Indicates whether the part will keep recomposing after the initial import satisfaction
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will
                contain a collection of errors that occurred.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                The <see cref="P:System.ComponentModel.Composition.Hosting.CompositionEngine.SourceProvider"/> property was not set.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionEngine"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionEngine.UnregisterForRecomposition(System.ComponentModel.Composition.Primitives.ComposablePart)">
            <summary>
                Unregisters the specified part from recomposition.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> to unregister from recomposition.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                The <see cref="P:System.ComponentModel.Composition.Hosting.CompositionEngine.SourceProvider"/> property was not set.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionEngine"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.CompositionEngine.SourceProvider">
            <summary>
                Gets the export provider which provides the composition engine access to
                exports.
            </summary>
            <value>
                The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"/> which provides the 
                <see cref="T:System.ComponentModel.Composition.Hosting.CompositionEngine"/> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects. 
                The default is <see langword="null"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                This property has already been set.
                <para>
                    -or-
                </para>
                The methods on the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionEngine"/> 
                have already been accessed.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionEngine"/> has been disposed of.
            </exception>
            <remarks>
                This property must be set before accessing any methods on the 
                <see cref="T:System.ComponentModel.Composition.Hosting.CompositionEngine"/>.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.CompositionServices.IsAtMostOne(System.ComponentModel.Composition.Primitives.ImportCardinality)">
            <summary>
                Returns a value indicating whether cardinality is 
                <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne"/> or 
                <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne"/>.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs">
            <summary>
                Provides data for the <see cref="E:System.ComponentModel.Composition.Hosting.CompositionContainer.ExportsChanged"/> event.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs"/> class with 
                the specified changed contract names.
            </summary>
            <param name="changedContractNames">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of strings representing the contract names of the 
                exports that have changed in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="changedContractNames"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.ExportsChangedEventArgs.ChangedContractNames">
            <summary>
                Gets the contract names of the exports that have changed.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of strings representing the contract names of 
                the exports that have changed in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
            <summary>
                An immutable ComposablePartCatalog created from a type array or a list of managed types.  This class is threadsafe.
                It is Disposable.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog"/> class 
                with the specified types.
            </summary>
            <param name="types">
                An <see cref="T:System.Array"/> of attributed <see cref="T:System.Type"/> objects to add to the 
                <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="types"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="types"/> contains an element that is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="types"/> contains an element that was loaded in the Reflection-only context.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog"/> class
                with the specified types.
            </summary>
            <param name="types">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of attributed <see cref="T:System.Type"/> objects to add 
                to the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="types"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="types"/> contains an element that is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="types"/> contains an element that was loaded in the reflection-only context.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
                Returns the export definitions that match the constraint defined by the specified definition.
            </summary>
            <param name="definition">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects to return.
            </param>
            <returns>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.TempTuple`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects and their associated 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> for objects that match the constraint defined 
                by <paramref name="definition"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString">
            <summary>
                Returns a string representation of the type catalog.
            </summary>
            <returns>
                A <see cref="T:System.String"/> containing the string representation of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog"/>.
            </returns>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.TypeCatalog.Parts">
            <summary>
                Gets the part definitions of the catalog.
            </summary>
            <value>
                A <see cref="T:System.Linq.IQueryable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> objects of the 
                <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
            <summary>
                Gets the display name of the type catalog.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing a human-readable display name of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
            <summary>
                Gets the composition element from which the type catalog originated.
            </summary>
            <value>
                This property always returns <see langword="null"/>.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.ImportingConstructorAttribute">
            <summary>
                Specifies that a constructor should be used when constructing an attributed part.
            </summary>
            <remarks>
                By default, only a default parameter-less constructor, if available, is used to 
                construct an attributed part. Use this attribute to indicate that a specific constructor 
                should be used.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportingConstructorAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportingConstructorAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.MetadataViewAttribute">
            <summary>
                Specifies the provider for constructing Metadata Views
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.MetadataViewAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.MetadataViewAttribute"/> class.
            </summary>
        </member>
        <member name="P:System.ComponentModel.Composition.MetadataViewAttribute.Provider">
            <summary>
                Gets or sets a value indicating the Type which operates as a provider for 
                Strongly Typed Metadata Views.
            </summary>
            <value>
                The Type that is the provider for Strongly Typed Metadata Views
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalogChangedEventArgs">
            <summary>
                Provides data for the <see cref="E:System.ComponentModel.Composition.Primitives.INotifyComposablePartCatalogChanged.Changed"/> event.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalogChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalogChangedEventArgs"/> 
                class with the specified changed <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> objects.
            </summary>
            <param name="changedDefinitions">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> objects that 
                have changed in the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="changedParts"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalogChangedEventArgs.ChangedDefinitions">
            <summary>
                Gets the identifiers of the parts that have changed.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> objects that 
                have changed in the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/>.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.ComposablePartException">
            <summary>
                The exception that is thrown when an error occurs when calling methods on a
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/> class 
                with the specified error message.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
            <param name="element">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement"/> that is the cause of the
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>; or <see langword="null"/> to set
                the <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePartException.Element"/> property to 
                <see langword="null"/>.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/> class 
                with the specified error message and composition element that is the cause of
                the exception.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/> class 
                with the specified error message and exception that is the cause of the  
                exception.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
            <param name="innerException">
                The <see cref="T:System.Exception"/> that is the underlying cause of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.InnerException"/> property to <see langword="null"/>.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/> class 
                with the specified error message, and composition element and exception that 
                are the cause of the exception.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
            <param name="element">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement"/> that is the cause of the
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>; or <see langword="null"/> to set
                the <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePartException.Element"/> property to 
                <see langword="null"/>.
            </param>
            <param name="innerException">
                The <see cref="T:System.Exception"/> that is the underlying cause of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.InnerException"/> property to <see langword="null"/>.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/> class 
                with the specified serialization data.
            </summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the 
                source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
                <paramref name="info"/> is missing a required value.
            </exception>
            <exception cref="T:System.InvalidCastException">
                <paramref name="info"/> contains a value that cannot be cast to the correct type.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Gets the serialization data of the exception.
            </summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the 
                source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Primitives.ComposablePartException.Element">
            <summary>
                Gets the composition element that is the cause of the exception.
            </summary>
            <value>
                The <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement"/> that is the cause of the
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>. The default is <see langword="null"/>.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.Primitives.ImportCardinality">
            <summary>
                Indicates the cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects required by an <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne">
            <summary>
                Zero or one <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects are required by an <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne">
            <summary>
                Exactly one <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> object is required by an <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore">
            <summary>
                Zero or more <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects are required by an <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/>.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.PartMetadataAttribute">
            <summary>
                Specifies metadata for a type to be used as a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> and
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.PartMetadataAttribute.#ctor(System.String,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.PartMetadataAttribute"/> with the 
                specified name and metadata value.
            </summary>
            <param name="name">
                A <see cref="T:System.String"/> containing the name of the metadata value; or 
                <see langword="null"/> to use an empty string ("").
            </param>
            <param name="value">
                An <see cref="T:System.Object"/> containing the metadata value. This can be 
                <see langword="null"/>.
            </param>
        </member>
        <member name="P:System.ComponentModel.Composition.PartMetadataAttribute.Name">
            <summary>
                Gets the name of the metadata value.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing the name of the metadata value.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.PartMetadataAttribute.Value">
            <summary>
                Gets the metadata value.
            </summary>
            <value>
                An <see cref="T:System.Object"/> containing the metadata value.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportCollection">
            <summary>
                Represents a collection of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection"/> class 
                that is empty.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection"/> class,
                adding the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/>
                objects to the collection.
            </summary>
            <param name="items">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.Export"/> objects to add 
                to the <see cref="T:System.ComponentModel.Composition.ExportCollection"/>; or <see langword="null"/> to create 
                an <see cref="T:System.ComponentModel.Composition.ExportCollection"/> that is empty.
            </param>
        </member>
        <member name="T:System.ComponentModel.Composition.ImportRequiredMetadataAttribute">
            <summary>
                Specifies required metadata for a property, field or parameter marked with the
                <see cref="T:System.ComponentModel.Composition.ImportAttribute"/>.
            </summary>
            <remarks>
                By default, any export that matches the contract name of an import will be considered a
                match for that import. Use this attribute to indicate that an export should also contain 
                specific metadata to be considered a match.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportRequiredMetadataAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportRequiredMetadataAttribute"/> class
                with the specified required metadata name.
            </summary>
            <param name="name">
                A <see cref="T:System.String"/> containing the name of the required metadata value, or 
                <see langword="null"/> to use an empty string ("").
            </param>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportRequiredMetadataAttribute.Name">
            <summary>
                Gets the name of the required metadata value.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing the name of the required metadata value.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.CompositionException">
            <summary>
                The exception that is thrown when one or more errors occur during composition in 
                a <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionException"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionException"/> class 
                with the specified error message.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.CompositionException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionException"/> class 
                with the specified error message and exception that is the cause of the  
                exception.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.CompositionException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
            <param name="innerException">
                The <see cref="T:System.Exception"/> that is the underlying cause of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.InnerException"/> property to <see langword="null"/>.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionException"/> class 
                with the specified errors.
            </summary>
            <param name="errors">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.CompositionError"/> objects
                representing the errors that are the cause of the 
                <see cref="T:System.ComponentModel.Composition.CompositionException"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> property to an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="errors"/> contains an element that is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionException"/> class 
                with the specified serialization data.
            </summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
                <see cref="T:System.ComponentModel.Composition.CompositionException"/>.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the 
                source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
                <paramref name="info"/> is missing a required value.
            </exception>
            <exception cref="T:System.InvalidCastException">
                <paramref name="info"/> contains a value that cannot be cast to the correct type.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Gets the serialization data of the exception.
            </summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException"/>.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the 
                source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionException.Errors">
            <summary>
                Gets the errors that are the cause of the exception.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.CompositionError"/> objects
                representing the errors that are the cause of the 
                <see cref="T:System.ComponentModel.Composition.CompositionException"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionException.Message">
            <summary>
                Gets a message that describes the exception.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.CompositionException"/>.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.CompositionOptionsAttribute">
            <summary>
                Specifies discovery and creation options for an attributed part.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionOptionsAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionOptionsAttribute"/> class.
            </summary>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionOptionsAttribute.CreationPolicy">
            <summary>
                Gets or sets a value indicating the creation policy of the attributed part.
            </summary>
            <value>
                One of the <see cref="P:System.ComponentModel.Composition.CompositionOptionsAttribute.CreationPolicy"/> values indicating the creation policy of the 
                attributed part. The default is 
                <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionOptionsAttribute.CatalogDiscoveryMode">
            <summary>
                Gets or sets a value indicating when an attributed part will be discovered.
            </summary>
            <value>
                One of the <see cref="P:System.ComponentModel.Composition.CompositionOptionsAttribute.CatalogDiscoveryMode"/> values indicating when the attributed part 
                will be discovered by a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"/>. The default is 
                <see cref="F:System.ComponentModel.Composition.CatalogDiscoveryMode.Auto"/>.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.CompositionServiceExtensions">
            <summary>
                Provides extension methods for the <see cref="T:System.ComponentModel.Composition.ICompositionService"/> interface.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionServiceExtensions.SatisfyImports(System.ComponentModel.Composition.ICompositionService,System.ComponentModel.Composition.Primitives.ComposablePart)">
            <summary>
                Satisfies the imports of the specified composable part.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> to set the imports and register for recomposition.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will
                contain a collection of errors that occurred.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionServiceExtensions.SatisfyImports(System.ComponentModel.Composition.ICompositionService,System.Object,System.Boolean)">
            <summary>
                Satisfies the imports of the specified attributed composable part and registers it for 
                recomposition if requested.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> to set the imports and register for recomposition.
            </param>
            <param name="registerForRecomposition">
                Indicates whether the part will keep recomposing after the initial import satisfaction
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="attributedPart"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will
                contain a collection of errors that occurred.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionServiceExtensions.SatisfyImports(System.ComponentModel.Composition.ICompositionService,System.Object)">
            <summary>
                Satisfies the imports of the specified attributed composable part.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> to set the imports and register for recomposition.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="attributedPart"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors"/> will
                contain a collection of errors that occurred.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> has been disposed of.
            </exception>
        </member>
        <member name="T:System.ComponentModel.Composition.ContractTypeAttribute">
            <summary>
                Specifies that a class, interface or delegate is a contract type.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractTypeAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractTypeAttribute"/> class, using the 
                default contract name.
            </summary>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on the type that is 
                    marked with this attribute.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractTypeAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/> class with the 
                specified contract name.
            </summary>
            <param name="contractName">
                 A <see cref="T:System.String"/> containing the contract name of the type, or 
                 <see langword="null"/> or an empty string ("") to use the default contract name.
            </param>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on the type that is 
                    marked with this attribute.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ContractTypeAttribute.ContractName">
            <summary>
                Gets the contract name of the contract type.
            </summary>
            <value>
                 A <see cref="T:System.String"/> containing the contract name of the contract 
                 <see cref="T:System.Type"/>. The default value is an empty string ("").
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.ContractTypeAttribute.MetadataViewType">
            <summary>
                Gets the metadata view of the contract type.
            </summary>
            <value>
                A <see cref="T:System.Type"/> representing the metadata view of the contract 
                <see cref="T:System.Type"/>. The default value is <see langword="null"/>.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.CreationPolicy">
            <summary>
            Option placed on a type that controls when the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> creates 
            a new instance of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.CreationPolicy.Any">
            <summary>
            Let the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> choose the most appropriate <see cref="T:System.ComponentModel.Composition.CreationPolicy"/>
            for the part given the current context. This is the default <see cref="T:System.ComponentModel.Composition.CreationPolicy"/>, with
            the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> choosing <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared"/> by default
            unless the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> or importer requests <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.CreationPolicy.Shared">
            <summary>
            A single shared instance of the associated <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> will be created
            by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> and shared by all requestors.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.CreationPolicy.NonShared">
            <summary>
            A new non-shared instance of the associated <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"/> will be created
            by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> for every requestor.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportAttribute">
            <summary>
                Specifies that a type, property, field, or method provides a particular export.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> class, exporting the
                type or member marked with this attribute under the default contract name.
            </summary>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on the type of the 
                    property or field, or the type itself, that is marked with this attribute. 
                    Methods must specify a contract name or type using either 
                    <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)"/> or <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> class, exporting the
                type or member marked with this attribute under a contract name derived from the 
                specified type.
            </summary>
            <param name="contractType">
                A <see cref="T:System.Type"/> of which to derive the contract name to export the type or 
                member marked with this attribute, under; or <see langword="null"/> to use the 
                default contract name.
            </param>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on 
                    <paramref name="contractType"/>.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on the type of the 
                    property or field, or the type itself, that is marked with this attribute. 
                    Methods must specify a contract name or type using either 
                    <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)"/> or <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> class, exporting the
                type or member marked with this attribute under the specified contract name.
            </summary>
            <param name="contractName">
                 A <see cref="T:System.String"/> containing the contract name to export the type or member 
                 marked with this attribute, under; or <see langword="null"/> or an empty string 
                 ("") to use the default contract name.
            </param>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on the property or field 
                    type, or the type itself that this is marked with this attribute. Methods must 
                    specify a contract name or type using either <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)"/>
                    or <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ExportAttribute.ContractName">
            <summary>
                Gets the contract name to export the type or member under.
            </summary>
            <value>
                 A <see cref="T:System.String"/> containing the contract name to export the type or member 
                 marked with this attribute, under. The default value is an empty string ("").
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportMetadataAttribute">
            <summary>
                Specifies metadata for a type, property, field, or method marked with the
                <see cref="T:System.ComponentModel.Composition.ExportAttribute"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportMetadataAttribute.#ctor(System.String,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportMetadataAttribute"/> with the 
                specified name and metadata value.
            </summary>
            <param name="name">
                A <see cref="T:System.String"/> containing the name of the metadata value; or 
                <see langword="null"/> to set the <see cref="P:System.ComponentModel.Composition.ExportMetadataAttribute.Name"/> property to an empty 
                string ("").
            </param>
            <param name="value">
                An <see cref="T:System.Object"/> containing the metadata value. This can be 
                <see langword="null"/>.
            </param>
        </member>
        <member name="P:System.ComponentModel.Composition.ExportMetadataAttribute.Name">
            <summary>
                Gets the name of the metadata value.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing the name of the metadata value.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.ExportMetadataAttribute.Value">
            <summary>
                Gets the metadata value.
            </summary>
            <value>
                An <see cref="T:System.Object"/> containing the metadata value.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.ImportAttribute">
            <summary>
                Specifies that a property, field, or parameter imports a particular export.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/> class, importing the 
                export with the default contract name.
            </summary>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on the property, field, 
                    or parameter type that this is marked with this attribute.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/> class, importing the
                export with the contract name derived from the specified type.
            </summary>
            <param name="contractType">
                A <see cref="T:System.Type"/> of which to derive the contract name of the export to import, or 
                <see langword="null"/> to use the default contract name.
            </param>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on 
                    <paramref name="contractType"/>.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on the property, field, 
                    or parameter type that is marked with this attribute.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/> class, importing the
                export with the specified contract name.
            </summary>
            <param name="contractName">
                 A <see cref="T:System.String"/> containing the contract name of the export to import, or 
                 <see langword="null"/> or an empty string ("") to use the default contract name.
            </param>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.Hosting.CompositionServices.GetContractName(System.Type)"/> on the property, field, 
                    or parameter type that is marked with this attribute.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportAttribute.ContractName">
            <summary>
                Gets the contract name of the export to import.
            </summary>
            <value>
                 A <see cref="T:System.String"/> containing the contract name of the export to import. The 
                 default value is an empty string ("").
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault">
            <summary>
                Gets or sets a value indicating whether the property, field or parameter will be set 
                to its type's default value when an export with the contract name is not present in 
                the container.
            </summary>
            <value>
                <see langword="true"/> if the property, field or parameter will be set 
                its type's default value when an export with the <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName"/> is not 
                present in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>; otherwise, <see langword="false"/>. 
                The default value is <see langword="false"/>.
            </value>
            <remarks>
                <para>
                    The default value of a property's, field's or parameter's type is 
                    <see langword="null"/> for reference types and 0 for numeric value types. For 
                    other value types, the default value will be each field of the value type 
                    initialized to zero, if the field is a value type or <see langword="null"/> if 
                    the field is a reference type.
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition">
            <summary>
                Gets or sets a value indicating whether the property or field will be recomposed
                when exports that provide the same contract that this import expects, have changed
                in the container. 
            </summary>
            <value>
                <see langword="true"/> if the property or field allows for recomposition when exports
                that provide the same <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName"/> are added or removed from the 
                <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>; otherwise, <see langword="false"/>. 
                The default value is <see langword="false"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy">
            <summary>
                Gets or sets a value indicating that the importer requires a specific 
                <see cref="T:System.ComponentModel.Composition.CreationPolicy"/> for the exports used to satisfy this import. T
            </summary>
            <value>
                <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any"/> - default value, used if the importer doesn't 
                    require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy"/>.
            
                <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared"/> - Requires that all exports used should be shared
                    by everyone in the container.
            
                <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared"/> - Requires that all exports used should be 
                    non-shared in a container and thus everyone gets their own instance.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.MetadataAttributeAttribute">
            <summary>
                Specifies that an attribute can be used to provide metadata for a type, property, field,
                or method marked with the <see cref="T:System.ComponentModel.Composition.ExportAttribute"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.MetadataAttributeAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.MetadataAttributeAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
                Returns the export definitions that match the constraint defined by the specified definition.
            </summary>
            <param name="definition">
                The <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> that defines the conditions of the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects to return.
            </param>
            <returns>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.TempTuple`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> objects and their associated 
                <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> for objects that match the constraint defined 
                by <paramref name="definition"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString">
            <summary>
                Returns a string representation of the directory catalog.
            </summary>
            <returns>
                A <see cref="T:System.String"/> containing the string representation of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog"/>.
            </returns>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Parts">
            <summary>
                Gets the part definitions of the directory catalog.
            </summary>
            <value>
                A <see cref="T:System.Linq.IQueryable`1"/> of <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition"/> objects of the 
                <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
            <summary>
                Gets the display name of the directory catalog.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing a human-readable display name of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
            <summary>
                Gets the composition element from which the directory catalog originated.
            </summary>
            <value>
                This property always returns <see langword="null"/>.
            </value>
        </member>
        <member name="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed">
            <summary>
            Notify when the contents of the Catalog has changed.
            </summary>
        </member>
    </members>
</doc>
